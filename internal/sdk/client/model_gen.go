// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package client

import (
	"bytes"
	"fmt"
	"io"
	"strconv"
)

// AWS environment.
type AWSEnv struct {
	// A globally-unique environment identifier.
	Name string `json:"name"`
	// Environment spec.
	Spec *AWSEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
	// Environment status.
	Status *AWSEnvStatus `json:"status"`
}

// AWS environment VPC endpoint configuration.
type AWSEnvEndpointSpec struct {
	// VPC endpoint service name in $endpoint_service_id.$region.vpce.amazonaws.com format.
	ServiceName string `json:"serviceName"`
	// By default, VPC endpoints get assigned $endpoint_service_id.$env_name.altinity.cloud DNS record.
	// Alias allows to override DNS record name to $alias.$env_name.altinity.cloud.
	Alias *string `json:"alias,omitempty"`
	// True indicates that Private DNS for this endpoint is enabled, false otherwise.
	PrivateDNS bool `json:"privateDNS"`
}

// AWS environment VPC endpoint configuration input.
type AWSEnvEndpointSpecInput struct {
	// VPC endpoint service name (in $endpoint_service_id.$region.vpce.amazonaws.com format).
	ServiceName string `json:"serviceName"`
	// By default, VPC endpoints get assigned $endpoint_service_id.$env_name.altinity.cloud DNS record.
	// Alias allows to override DNS record name to $alias.$env_name.altinity.cloud.
	Alias *string `json:"alias,omitempty"`
	// Set to true to enable Private DNS for this endpoint. False by default.
	PrivateDNS *bool `json:"privateDNS,omitempty"`
}

// External S3 bucket to allow access to
type AWSEnvExternalBucketSpec struct {
	// External bucket name.
	Name string `json:"name"`
}

// External S3 bucket to allow access to
type AWSEnvExternalBucketSpecInput struct {
	// External bucket name.
	Name string `json:"name"`
}

// AWS environments query filter.
type AWSEnvFilter struct {
	// Names of the environments to return.
	// Names that don't match any of the existing environments are ignored.
	Names []string `json:"names,omitempty"`
}

// AWS environment internal load balancer configuration.
type AWSEnvLoadBalancerInternalSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
	// True indicates that traffic should be distributed across all specified availability zones,
	// false otherwise.
	//
	// True by default.
	CrossZone bool `json:"crossZone"`
	// ARNs for AWS principals that are allowed to create VPC endpoints.
	//
	// Examples:
	// - arn:aws:iam::$account_id:root
	EndpointServiceAllowedPrincipals []string `json:"endpointServiceAllowedPrincipals"`
	// List of supported regions for VPC endpoints.
	//
	// Example: ["us-east-1", "us-west-2"]
	EndpointServiceSupportedRegions []string `json:"endpointServiceSupportedRegions"`
}

// AWS environment internal load balancer configuration input.
type AWSEnvLoadBalancerInternalSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
	// True indicates that traffic should be distributed across all specified availability zones,
	// false otherwise.
	//
	// True by default.
	CrossZone *bool `json:"crossZone,omitempty"`
	// ARNs for AWS principals that are allowed to create VPC endpoints.
	//
	// Examples:
	// - arn:aws:iam::$account_id:root
	EndpointServiceAllowedPrincipals []string `json:"endpointServiceAllowedPrincipals,omitempty"`
	// List of supported regions for VPC endpoints.
	//
	// Example: ["us-east-1", "us-west-2"]
	EndpointServiceSupportedRegions []string `json:"endpointServiceSupportedRegions,omitempty"`
}

// AWS environment internal load balancer status.
type AWSEnvLoadBalancerInternalStatus struct {
	// VPC endpoint service name in $endpoint_service_id.$region.vpce.amazonaws.com format (if any).
	EndpointServiceName *string `json:"endpointServiceName,omitempty"`
}

// AWS environment public load balancer configuration.
type AWSEnvLoadBalancerPublicSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
	// True indicates that traffic should be distributed across all specified availability zones,
	// false otherwise.
	//
	// True by default.
	CrossZone bool `json:"crossZone"`
}

// AWS environment public load balancer configuration input.
type AWSEnvLoadBalancerPublicSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
	// True indicates that traffic should be distributed across all specified availability zones,
	// false otherwise.
	//
	// True by default.
	CrossZone *bool `json:"crossZone,omitempty"`
}

// AWS environment load balancers configuration.
type AWSEnvLoadBalancersSpec struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *AWSEnvLoadBalancerPublicSpec `json:"public"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *AWSEnvLoadBalancerInternalSpec `json:"internal"`
}

// AWS environment load balancers configuration input.
type AWSEnvLoadBalancersSpecInput struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *AWSEnvLoadBalancerPublicSpecInput `json:"public,omitempty"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *AWSEnvLoadBalancerInternalSpecInput `json:"internal,omitempty"`
}

// AWS environment load balancers status.
type AWSEnvLoadBalancersStatus struct {
	// Status of internal load balancer.
	Internal *AWSEnvLoadBalancerInternalStatus `json:"internal"`
}

// AWS environment node group configuration.
type AWSEnvNodeGroupSpec struct {
	// Unique (among environment node groups) node group identifier.
	Name string `json:"name"`
	// Instance type (https://aws.amazon.com/ec2/instance-types/).
	//
	// Example: "t4g.large"
	NodeType string `json:"nodeType"`
	// Availability zones.
	Zones []string `json:"zones"`
	// Maximum number of instances per availability zone.
	CapacityPerZone int64 `json:"capacityPerZone"`
	// Types of workload that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations"`
}

// AWS environment node group configuration input.
type AWSEnvNodeGroupSpecInput struct {
	// Unique (among environment node groups) node group identifier.
	//
	// Defaults to $nodeType.
	Name *string `json:"name,omitempty"`
	// Instance type (https://aws.amazon.com/ec2/instance-types/).
	NodeType string `json:"nodeType"`
	// Availability zones.
	//
	// Defaults to environment zones.
	Zones []string `json:"zones,omitempty"`
	// Maximum number of instances per availability zone.
	CapacityPerZone int64 `json:"capacityPerZone"`
	// Types of workloads this group is reserved for.
	// Defaults to all.
	Reservations []NodeReservation `json:"reservations,omitempty"`
}

// AWS environment VPC peering configuration.
type AWSEnvPeeringConnectionSpec struct {
	// Target VPC ID.
	VpcID string `json:"vpcID"`
	// Target VPC region.
	//
	// Defaults to environment region.
	VpcRegion *string `json:"vpcRegion,omitempty"`
	// Target VPC AWS account ID.
	//
	// Defaults to environment AWS account ID.
	AWSAccountID *string `json:"awsAccountID,omitempty"`
}

// AWS environment VPC peering configuration input.
type AWSEnvPeeringConnectionSpecInput struct {
	// Target VPC ID.
	VpcID string `json:"vpcID"`
	// Target VPC region.
	//
	// Defaults to environment region.
	VpcRegion *string `json:"vpcRegion,omitempty"`
	// Target VPC AWS account ID.
	//
	// Defaults to environment AWS account ID.
	AWSAccountID *string `json:"awsAccountID,omitempty"`
}

// AWS environment peering connection status.
type AWSEnvPeeringConnectionStatus struct {
	// Connection ID.
	ID *string `json:"id,omitempty"`
	// Target VPC ID.
	VpcID string `json:"vpcID"`
}

// AWS environment configuration.
type AWSEnvSpec struct {
	// ID of the AWS account (https://docs.aws.amazon.com/IAM/latest/UserGuide/console-account-id.html#w5aac11c17b5)
	// in which to provision AWS resources.
	//
	// Immutable.
	AWSAccountID string `json:"awsAccountID"`
	// VPC CIDR block from the private IPv4 address ranges as specified in RFC 1918
	// (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16).
	//
	// At least /21 required.
	//
	// Examples: "10.136.0.0/21"
	//
	// Immutable.
	Cidr string `json:"cidr"`
	// AWS region (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html#Concepts.RegionsAndAvailabilityZones.Regions).
	//
	// Example: "us-east-1"
	//
	// Immutable.
	Region string `json:"region"`
	// Explicit list of AWS availability zones.
	// At least 2 required.
	//
	// Example: ["us-east-1a", "us-east-1b"]
	Zones []string `json:"zones"`
	// Enable AWS NAT Gateway.
	//
	// Immutable.
	Nat bool `json:"NAT"`
	// Load balancers configuration.
	LoadBalancers *AWSEnvLoadBalancersSpec `json:"loadBalancers"`
	// Load balancing strategy.
	LoadBalancingStrategy LoadBalancingStrategy `json:"loadBalancingStrategy"`
	// List of node groups.
	// At least one required.
	NodeGroups []*AWSEnvNodeGroupSpec `json:"nodeGroups"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpec `json:"maintenanceWindows"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	//   CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	//   CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	//   CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// VPC peering configuration.
	PeeringConnections []*AWSEnvPeeringConnectionSpec `json:"peeringConnections"`
	// VPC endpoints configuration.
	Endpoints []*AWSEnvEndpointSpec `json:"endpoints"`
	// Tags to apply to AWS resources.
	Tags []*KeyValue `json:"tags"`
	// True indicates that cloud resources are to be managed via altinity/cloud-connect.
	// False means direct management.
	CloudConnect bool `json:"cloudConnect"`
	// Permissions boundary policy ARN.
	PermissionsBoundaryPolicyArn *string `json:"permissionsBoundaryPolicyArn,omitempty"`
	// Prefix for AWS resources created by this environment.
	ResourcePrefix string `json:"resourcePrefix"`
	// List of external S3 buckets to allow access to
	ExternalBuckets []*AWSEnvExternalBucketSpec `json:"externalBuckets"`
}

// AWS environment status.
type AWSEnvStatus struct {
	// Applied spec revision (monotonically-increasing).
	AppliedSpecRevision int64 `json:"appliedSpecRevision"`
	// Status of load balancers.
	LoadBalancers *AWSEnvLoadBalancersStatus `json:"loadBalancers"`
	// Status of peering connections.
	PeeringConnections []*AWSEnvPeeringConnectionStatus `json:"peeringConnections"`
	// True indicates that environment is pending deletion.
	PendingDelete bool `json:"pendingDelete"`
	// Status errors.
	Errors []*EnvStatusError `json:"errors"`
}

// AWS environment configuration update request input.
type AWSEnvUpdateSpecInput struct {
	// Number of AWS availability zones.
	// At least 2 required (if specified).
	NumberOfZones *int64 `json:"numberOfZones,omitempty"`
	// Explicit list of AWS availability zones.
	// At least 2 required (if specified).
	//
	// Example: ["us-east-1a", "us-east-1b"]
	Zones []string `json:"zones,omitempty"`
	// Load balancers configuration.
	LoadBalancers *AWSEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	NodeGroups []*AWSEnvNodeGroupSpecInput `json:"nodeGroups,omitempty"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// VPC peering configuration.
	PeeringConnections []*AWSEnvPeeringConnectionSpecInput `json:"peeringConnections,omitempty"`
	// VPC endpoints configuration.
	Endpoints []*AWSEnvEndpointSpecInput `json:"endpoints,omitempty"`
	// Tags to apply to AWS resources.
	Tags []*KeyValueInput `json:"tags,omitempty"`
	// List of external S3 buckets to allow access to
	ExternalBuckets []*AWSEnvExternalBucketSpecInput `json:"externalBuckets,omitempty"`
}

// Azure environment.
type AzureEnv struct {
	// A globally-unique environment identifier.
	Name string `json:"name"`
	// Environment spec.
	Spec *AzureEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
	// Environment status.
	Status *AzureEnvStatus `json:"status"`
}

// Azure environments query filter.
type AzureEnvFilter struct {
	// Names of the environments to return.
	// Names that don't match any of the existing environments are ignored.
	Names []string `json:"names,omitempty"`
}

// Azure environment internal load balancer configuration.
type AzureEnvLoadBalancerInternalSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
}

type AzureEnvLoadBalancerInternalSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
}

// Azure environment internal load balancer status.
type AzureEnvLoadBalancerInternalStatus struct {
	// Private Link Service Alias / DNS Name in prefix.GUID.suffix format.
	PrivateLinkServiceAlias *string `json:"privateLinkServiceAlias,omitempty"`
}

// Azure environment public load balancer configuration.
type AzureEnvLoadBalancerPublicSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
}

type AzureEnvLoadBalancerPublicSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
}

// Azure environment load balancers configuration.
type AzureEnvLoadBalancersSpec struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *AzureEnvLoadBalancerPublicSpec `json:"public"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *AzureEnvLoadBalancerInternalSpec `json:"internal"`
}

// Azure environment load balancers configuration input.
type AzureEnvLoadBalancersSpecInput struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *AzureEnvLoadBalancerPublicSpecInput `json:"public,omitempty"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *AzureEnvLoadBalancerInternalSpecInput `json:"internal,omitempty"`
}

// Azure environment load balancers status.
type AzureEnvLoadBalancersStatus struct {
	// Status of internal load balancer.
	Internal *AzureEnvLoadBalancerInternalStatus `json:"internal"`
}

// Azure environment node group configuration.
type AzureEnvNodeGroupSpec struct {
	// Unique (among environment node groups) node group identifier.
	Name string `json:"name"`
	// Instance type (https://azure.microsoft.com/en-us/pricing/details/virtual-machines/series).
	//
	// Example: "PremiumV2_LRS"
	NodeType string `json:"nodeType"`
	// Availability zones.
	Zones []string `json:"zones"`
	// Maximum number of instances per availability zone.
	CapacityPerZone int64 `json:"capacityPerZone"`
	// Types of workload that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations"`
}

// Azure environment node group configuration input.
type AzureEnvNodeGroupSpecInput struct {
	// Unique (among environment node groups) node group identifier.
	//
	// Defaults to $nodeType.
	Name *string `json:"name,omitempty"`
	// Machine type (https://azure.microsoft.com/en-us/pricing/details/virtual-machines/series).
	//
	// Example: "PremiumV2_LRS"
	NodeType string `json:"nodeType"`
	// Azure zones.
	//
	// Defaults to environment zones.
	Zones []string `json:"zones,omitempty"`
	// Maximum number of instances per zone.
	CapacityPerZone int64 `json:"capacityPerZone"`
	// Types of workloads that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations,omitempty"`
}

// Azure environment configuration.
type AzureEnvSpec struct {
	// ID of the Azure Active Directory tenant for user identity and access management.
	//
	// Immutable.
	TenantID string `json:"tenantID"`
	// ID linking the environment to a specific Azure subscription for resource management.
	//
	// Immutable.
	SubscriptionID string `json:"subscriptionID"`
	// VPC CIDR block from the private IPv4 address ranges as specified in RFC 1918
	// (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16).
	//
	// At least /21 required.
	//
	// Examples: "10.136.0.0/21"
	//
	// Immutable.
	Cidr string `json:"cidr"`
	// Azure region (https://azure.microsoft.com/en-us/explore/global-infrastructure/geographies).
	//
	// Example: "eastus"
	//
	// Immutable.
	Region string `json:"region"`
	// Explicit list of Azure availability zones.
	// At least 2 required.
	//
	// Example: ["eastus-1", "eastus-2"]
	Zones []string `json:"zones"`
	// Load balancers configuration.
	LoadBalancers *AzureEnvLoadBalancersSpec `json:"loadBalancers"`
	// Load balancing strategy.
	LoadBalancingStrategy LoadBalancingStrategy `json:"loadBalancingStrategy"`
	// List of node groups.
	// At least one required.
	NodeGroups []*AzureEnvNodeGroupSpec `json:"nodeGroups"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpec `json:"maintenanceWindows"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	//   CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	//   CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, privatelink)
	//   CNAME *.privatelink.example.com. _.privatelink.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// Azure Private Link service configuration.
	PrivateLinkService *PrivateLinkServiceSpec `json:"privateLinkService"`
	// Tags to apply to Azure resources.
	Tags []*KeyValue `json:"tags"`
	// True indicates that cloud resources are to be managed via altinity/cloud-connect.
	// False means direct management.
	CloudConnect bool `json:"cloudConnect"`
}

// Azure environment status.
type AzureEnvStatus struct {
	// Applied spec revision (monotonically-increasing).
	AppliedSpecRevision int64 `json:"appliedSpecRevision"`
	// Status of load balancers.
	LoadBalancers *AzureEnvLoadBalancersStatus `json:"loadBalancers"`
	// True indicates that environment is pending deletion.
	PendingDelete bool `json:"pendingDelete"`
	// Status errors.
	Errors []*EnvStatusError `json:"errors"`
}

// Environment code output.
type CodeGenEnvOutput struct {
	Terraform string `json:"terraform"`
}

// AWS environment create request input.
type CreateAWSEnvInput struct {
	// A globally-unique environment identifier.
	//
	// Immutable.
	Name string `json:"name"`
	// Environment spec.
	Spec *CreateAWSEnvSpecInput `json:"spec"`
}

// AWS environment create request result.
type CreateAWSEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// AWS environment active configuration.
	Spec *AWSEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// AWS environment configuration create request input.
type CreateAWSEnvSpecInput struct {
	// ID of the AWS account (https://docs.aws.amazon.com/IAM/latest/UserGuide/console-account-id.html#w5aac11c17b5)
	// in which to provision AWS resources.
	//
	// Immutable.
	AWSAccountID string `json:"awsAccountID"`
	// VPC CIDR block from the private IPv4 address ranges as specified in RFC 1918
	// (10/8, 172.16/12, 192.168/16).
	//
	// At least /21 required.
	//
	// Example: "10.136.0.0/21"
	//
	// Immutable.
	Cidr string `json:"cidr"`
	// AWS region (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html#Concepts.RegionsAndAvailabilityZones.Regions).
	//
	// Example: "us-east-1"
	//
	// Immutable.
	Region string `json:"region"`
	// Number of AWS availability zones.
	// At least 2 required.
	//
	// This field is optional if "zones" is specified.
	NumberOfZones *int64 `json:"numberOfZones,omitempty"`
	// Explicit list of AWS availability zones.
	// At least 2 required.
	//
	// Example: ["us-east-1a", "us-east-1b"]
	//
	// This field is optional if "numberOfZones" is specified.
	Zones []string `json:"zones,omitempty"`
	// Enable AWS NAT Gateway.
	//
	// Immutable.
	Nat *bool `json:"NAT,omitempty"`
	// Load balancers configuration.
	LoadBalancers *AWSEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	// ZONE_BEST_EFFORT by default.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	// At least one required.
	NodeGroups []*AWSEnvNodeGroupSpecInput `json:"nodeGroups"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// VPC peering configuration.
	PeeringConnections []*AWSEnvPeeringConnectionSpecInput `json:"peeringConnections,omitempty"`
	// VPC endpoints configuration.
	Endpoints []*AWSEnvEndpointSpecInput `json:"endpoints,omitempty"`
	// Tags to apply to AWS resources.
	Tags []*KeyValueInput `json:"tags,omitempty"`
	// True indicates that cloud resources are to be managed via altinity/cloud-connect.
	// False means direct management (default).
	//
	// Immutable.
	CloudConnect *bool `json:"cloudConnect,omitempty"`
	// Permissions boundary policy ARN.
	//
	// Immutable.
	PermissionsBoundaryPolicyArn *string `json:"permissionsBoundaryPolicyArn,omitempty"`
	// Prefix to apply to the names of AWS resources during creation.
	//
	// Immutable.
	ResourcePrefix *string `json:"resourcePrefix,omitempty"`
	// List of external S3 buckets to allow access to
	ExternalBuckets []*AWSEnvExternalBucketSpecInput `json:"externalBuckets,omitempty"`
}

// Azure environment create request input.
type CreateAzureEnvInput struct {
	// A globally-unique environment identifier.
	//
	// Immutable.
	Name string `json:"name"`
	// Environment spec.
	Spec *CreateAzureEnvSpecInput `json:"spec"`
}

// Azure environment create request result.
type CreateAzureEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// Azure environment active configuration.
	Spec *AzureEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// Azure environment configuration create request input.
type CreateAzureEnvSpecInput struct {
	// ID of the Azure Active Directory tenant for user identity and access management.
	//
	// Immutable.
	TenantID string `json:"tenantID"`
	// ID linking the environment to a specific Azure subscription for resource management.
	//
	// Immutable.
	SubscriptionID string `json:"subscriptionID"`
	// Network CIDR block from the private IPv4 address ranges as specified in RFC 1918
	// (10/8, 172.16/12, 192.168/16).
	//
	// At least /21 required.
	//
	// Example: "10.136.0.0/21"
	//
	// Immutable.
	Cidr string `json:"cidr"`
	// Azure region (https://azure.microsoft.com/en-us/explore/global-infrastructure/geographies).
	//
	// Example: "eastus".
	//
	// Immutable.
	Region string `json:"region"`
	// Number of Azure zones.
	// At least 2 required.
	//
	// This field is optional if "zones" is specified.
	NumberOfZones *int64 `json:"numberOfZones,omitempty"`
	// Explicit list of Azure zones.
	// At least 2 required.
	//
	// Example: ["eastus-1", "eastus-2"]
	Zones []string `json:"zones,omitempty"`
	// Load balancers configuration.
	LoadBalancers *AzureEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	// ZONE_BEST_EFFORT by default.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	// At least one required.
	NodeGroups []*AzureEnvNodeGroupSpecInput `json:"nodeGroups"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, privatelink)
	// CNAME *.privatelink.example.com. _.privatelink.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// Azure Private Link service configuration.
	PrivateLinkService *PrivateLinkServiceSpecInput `json:"privateLinkService,omitempty"`
	Tags               []*KeyValueInput             `json:"tags,omitempty"`
	// True indicates that cloud resources are to be managed via altinity/cloud-connect.
	// False means direct management (default).
	//
	// Immutable.
	CloudConnect *bool `json:"cloudConnect,omitempty"`
}

// GCP environment create request input.
type CreateGCPEnvInput struct {
	// A globally-unique environment identifier.
	//
	// Immutable.
	Name string `json:"name"`
	// Environment spec.
	Spec *CreateGCPEnvSpecInput `json:"spec"`
}

// GCP environment create request result.
type CreateGCPEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// GCP environment active configuration.
	Spec *GCPEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// GCP environment configuration create request input.
type CreateGCPEnvSpecInput struct {
	// ID of the GCP project (https://support.google.com/googleapi/answer/7014113?hl=en#:~:text=The%20project%20ID%20is%20a,ID%20or%20create%20your%20own.)
	// in which to provision GCP resources.
	//
	// Immutable.
	GCPProjectID string `json:"gcpProjectId"`
	// Network CIDR block from the private IPv4 address ranges as specified in RFC 1918
	// (10/8, 172.16/12, 192.168/16).
	//
	// At least /21 required.
	//
	// Example: "10.136.0.0/21"
	//
	// Immutable.
	Cidr string `json:"cidr"`
	// GCP region (https://cloud.google.com/about/locations).
	//
	// Example: "us-west1".
	//
	// Immutable.
	Region string `json:"region"`
	// Number of GCP zones.
	// At least 2 required.
	//
	// This field is optional if "zones" is specified.
	NumberOfZones *int64 `json:"numberOfZones,omitempty"`
	// Explicit list of GCP zones.
	// At least 2 required.
	//
	// Example: ["us-west1a", "us-west1b"]
	Zones []string `json:"zones,omitempty"`
	// Load balancers configuration.
	LoadBalancers *GCPEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	// ZONE_BEST_EFFORT by default.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	// At least one required.
	NodeGroups []*GCPEnvNodeGroupSpecInput `json:"nodeGroups"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// True indicates that cloud resources are to be managed via altinity/cloud-connect.
	// False means direct management (default).
	//
	// Immutable.
	CloudConnect *bool `json:"cloudConnect,omitempty"`
	// Network peering configuration.
	PeeringConnections []*GCPEnvPeeringConnectionSpecInput `json:"peeringConnections,omitempty"`
	// List of project IDs + connection limits [projectID=connectionLimit] representing the network's private service consumers. Connection limits are optional, will be set to 1 if not specified.
	//
	// Example: ["project1", "project2=5"]
	PrivateServiceConsumers []string `json:"privateServiceConsumers,omitempty"`
	// List of private service connections.
	PrivateServiceConnections []*GCPEnvPrivateServiceConnectionSpecInput `json:"privateServiceConnections,omitempty"`
}

// HCloud environment create request input.
type CreateHCloudEnvInput struct {
	// A globally-unique environment identifier.
	//
	// Immutable.
	Name string `json:"name"`
	// Environment spec.
	Spec *CreateHCloudEnvSpecInput `json:"spec"`
}

// HCloud environment create request result.
type CreateHCloudEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// HCloud environment active configuration.
	Spec *HCloudEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// HCloud environment configuration create request input.
type CreateHCloudEnvSpecInput struct {
	// Network CIDR block from the private IPv4 address ranges as specified in RFC 1918
	// (10/8, 172.16/12, 192.168/16).
	//
	// At least /21 required.
	//
	// Example: "10.136.0.0/21"
	//
	// Immutable.
	Cidr string `json:"cidr"`
	// HCloud network https://docs.hetzner.com/cloud/general/locations/
	//
	// Example: "us-west"
	//
	// Immutable.
	NetworkZone string `json:"networkZone"`
	// Explicit list of HCloud locations.
	// (currently supports single location only)
	//
	// Example: ["hil"]
	Locations []string `json:"locations"`
	// Load balancers configuration.
	LoadBalancers *HCloudEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	// ZONE_BEST_EFFORT by default.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	// At least one required.
	NodeGroups []*HCloudEnvNodeGroupSpecInput `json:"nodeGroups"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// True indicates that cloud resources are to be managed via altinity/cloud-connect.
	// False means direct management.
	CloudConnect *bool `json:"cloudConnect,omitempty"`
	// Labels to apply to HCloud resources.
	Labels []*KeyValueInput `json:"labels,omitempty"`
	// Encrypted value of HCLOUD_TOKEN
	HcloudTokenEnc string `json:"hcloudTokenEnc"`
	// Wireguard peers configuration.
	WireguardPeers []*HCloudEnvWireguardPeerSpecInput `json:"wireguardPeers,omitempty"`
}

// Kubernetes environment create request input.
type CreateK8SEnvInput struct {
	// A globally-unique environment identifier.
	//
	// Immutable.
	Name string `json:"name"`
	// Environment spec.
	Spec *CreateK8SEnvSpecInput `json:"spec"`
}

// Kubernetes environment create request result.
type CreateK8SEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// Kubernetes environment active configuration.
	Spec *K8SEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// Kubernetes environment configuration create request input.
type CreateK8SEnvSpecInput struct {
	// Kubernetes distribution.
	//
	// Immutable.
	Distribution K8SDistribution `json:"distribution"`
	// Load balancers configuration.
	LoadBalancers *K8SEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	// ZONE_BEST_EFFORT by default.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	// At least one required.
	NodeGroups []*K8SEnvNodeGroupSpecInput `json:"nodeGroups"`
	// Custom node types.
	CustomNodeTypes []*K8SEnvCustomNodeTypeSpecInput `json:"customNodeTypes,omitempty"`
	// Metrics configuration.
	Metrics *K8SEnvMetricsSpecInput `json:"metrics,omitempty"`
	// Logs configuration.
	Logs *K8SEnvLogsSpecInput `json:"logs,omitempty"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
}

// AWS environment delete request input.
type DeleteAWSEnvInput struct {
	// The name of AWS environment to delete.
	Name string `json:"name"`
	// By default, delete mutation does not delete the env but rather marks it to be
	// removed once it's deprovisioned (which may take some time).
	// Set "force" to true to skip deprovisioning.
	Force *bool `json:"force,omitempty"`
	// By default, the delete operation will not delete any provisioned clusters and
	// the deletion will fail until the clusters get removed.
	// Set "forceDestroyClusters" to true remove all provisioned clusters as part of the environment deletion process.
	ForceDestroyClusters *bool `json:"forceDestroyClusters,omitempty"`
}

// AWS environment delete request result.
type DeleteAWSEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	PendingMfa bool   `json:"pendingMFA"`
}

// Azure environment delete request input.
type DeleteAzureEnvInput struct {
	// The name of Azure environment to delete.
	Name string `json:"name"`
	// By default, delete mutation does not delete the env but rather marks it to be
	// removed once it's deprovisioned (which may take some time).
	// Set "force" to true to skip deprovisioning.
	Force *bool `json:"force,omitempty"`
	// By default, the delete operation will not delete any provisioned clusters and
	// the deletion will fail until the clusters get removed.
	// Set "forceDestroyClusters" to true remove all provisioned clusters as part of the environment deletion process.
	ForceDestroyClusters *bool `json:"forceDestroyClusters,omitempty"`
}

// Azure environment delete request result.
type DeleteAzureEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	PendingMfa bool   `json:"pendingMFA"`
}

// GCP environment delete request input.
type DeleteGCPEnvInput struct {
	// The name of GCP environment to delete.
	Name string `json:"name"`
	// By default, delete mutation does not delete the env but rather marks it to be
	// removed once it's deprovisioned (which may take some time).
	// Set "force" to true to skip deprovisioning.
	Force *bool `json:"force,omitempty"`
	// By default, the delete operation will not delete any provisioned clusters and
	// the deletion will fail until the clusters get removed.
	// Set "forceDestroyClusters" to true remove all provisioned clusters as part of the environment deletion process.
	ForceDestroyClusters *bool `json:"forceDestroyClusters,omitempty"`
}

// GCP environment delete request result.
type DeleteGCPEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	PendingMfa bool   `json:"pendingMFA"`
}

// HCloud environment delete request input.
type DeleteHCloudEnvInput struct {
	// The name of HCloud environment to delete.
	Name string `json:"name"`
	// By default, delete mutation does not delete the env but rather marks it to be
	// removed once it's deprovisioned (which may take some time).
	// Set "force" to true to skip deprovisioning.
	Force *bool `json:"force,omitempty"`
	// By default, the delete operation will not delete any provisioned clusters and
	// the deletion will fail until the clusters get removed.
	// Set "forceDestroyClusters" to true remove all provisioned clusters as part of the environment deletion process.
	ForceDestroyClusters *bool `json:"forceDestroyClusters,omitempty"`
}

// HCloud environment delete request result.
type DeleteHCloudEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	PendingMfa bool   `json:"pendingMFA"`
}

// Kubernetes environment delete request input.
type DeleteK8SEnvInput struct {
	// The name of Kubernetes environment to delete.
	Name string `json:"name"`
	// By default, delete mutation does not delete the env but rather marks it to be
	// removed once it's deprovisioned (which may take some time).
	// Set "force" to true to skip deprovisioning.
	Force *bool `json:"force,omitempty"`
	// By default, the delete operation will not delete any provisioned clusters and
	// the deletion will fail until the clusters get removed.
	// Set "forceDestroyClusters" to true remove all provisioned clusters as part of the environment deletion process.
	ForceDestroyClusters *bool `json:"forceDestroyClusters,omitempty"`
}

// Kubernetes environment delete request result.
type DeleteK8SEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	PendingMfa bool   `json:"pendingMFA"`
}

// Status error.
type EnvStatusError struct {
	// Status error code.
	Code EnvStatusErrorCode `json:"code"`
	// Status error message.
	Message string `json:"message"`
}

// GCP environment.
type GCPEnv struct {
	// A globally-unique environment identifier.
	Name string `json:"name"`
	// Environment spec.
	Spec *GCPEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
	// Environment status.
	Status *GCPEnvStatus `json:"status"`
}

// GCP environments query filter.
type GCPEnvFilter struct {
	// Names of the environments to return.
	// Names that don't match any of the existing environments are ignored.
	Names []string `json:"names,omitempty"`
}

// GCP environment internal load balancer configuration.
type GCPEnvLoadBalancerInternalSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
}

type GCPEnvLoadBalancerInternalSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
}

// GCP environment public load balancer configuration.
type GCPEnvLoadBalancerPublicSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
}

type GCPEnvLoadBalancerPublicSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
}

// GCP environment load balancers configuration.
type GCPEnvLoadBalancersSpec struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *GCPEnvLoadBalancerPublicSpec `json:"public"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *GCPEnvLoadBalancerInternalSpec `json:"internal"`
}

// GCP environment load balancers configuration input.
type GCPEnvLoadBalancersSpecInput struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *GCPEnvLoadBalancerPublicSpecInput `json:"public,omitempty"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *GCPEnvLoadBalancerInternalSpecInput `json:"internal,omitempty"`
}

type GCPEnvNodeGroupSpec struct {
	// Unique (among environment node groups) node group identifier.
	Name string `json:"name"`
	// Machine type (https://cloud.google.com/compute/docs/machine-resource).
	//
	// Example: "e2-standard-2"
	NodeType string `json:"nodeType"`
	// GCP zones.
	Zones []string `json:"zones"`
	// Maximum number of instances per zone.
	CapacityPerZone int64 `json:"capacityPerZone"`
	// Types of workloads that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations"`
}

// GCP environment node group configuration input.
type GCPEnvNodeGroupSpecInput struct {
	// Unique (among environment node groups) node group identifier.
	//
	// Defaults to $nodeType.
	Name *string `json:"name,omitempty"`
	// Machine type (https://cloud.google.com/compute/docs/machine-resource).
	//
	// Example: "e2-standard-2"
	NodeType string `json:"nodeType"`
	// GCP zones.
	//
	// Defaults to environment zones.
	Zones []string `json:"zones,omitempty"`
	// Maximum number of instances per zone.
	CapacityPerZone int64 `json:"capacityPerZone"`
	// Types of workloads that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations,omitempty"`
}

// GCP environment network peering configuration.
type GCPEnvPeeringConnectionSpec struct {
	// Target network's project ID.
	ProjectID *string `json:"projectID,omitempty"`
	// Target network name.
	NetworkName string `json:"networkName"`
}

// GCP environment network peering configuration input.
type GCPEnvPeeringConnectionSpecInput struct {
	// Target network's project ID.
	ProjectID *string `json:"projectID,omitempty"`
	// Target network name.
	NetworkName string `json:"networkName"`
}

// GCP environment private service connection configuration.
type GCPEnvPrivateServiceConnectionSpec struct {
	// Name of the private service connection.
	Name string `json:"name"`
	// GCP service attachment resource name.
	//
	// Example: "projects/my-service-project/regions/us-central1/serviceAttachments/my-service"
	Target string `json:"target"`
	// Alias of the private service connection.
	Alias *string `json:"alias,omitempty"`
}

// GCP environment private service connection configuration input.
type GCPEnvPrivateServiceConnectionSpecInput struct {
	// Name of the private service connection.
	Name string `json:"name"`
	// GCP service attachment resource name.
	//
	//
	// Example: "projects/my-service-project/regions/us-central1/serviceAttachments/my-service"
	Target string `json:"target"`
	// Alias of the private service connection.
	Alias *string `json:"alias,omitempty"`
}

// GCP environment configuration.
type GCPEnvSpec struct {
	// ID of the GCP project (https://support.google.com/googleapi/answer/7014113?hl=en#:~:text=The%20project%20ID%20is%20a,ID%20or%20create%20your%20own.)
	// in which to provision GCP resources.
	//
	// Immutable.
	GCPProjectID string `json:"gcpProjectId"`
	// Network CIDR block from the private IPv4 address ranges as specified in RFC 1918
	// (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16).
	//
	// At least /21 required.
	//
	// Examples: "10.136.0.0/21"
	//
	// Immutable.
	Cidr string `json:"cidr"`
	// GCP region (https://cloud.google.com/about/locations).
	//
	// Example: "us-west1".
	//
	// Immutable.
	Region string `json:"region"`
	// Explicit list of GCP zones.
	// At least 2 required.
	//
	// Example: ["us-west1a", "us-west1b"]
	Zones []string `json:"zones"`
	// Load balancers configuration.
	LoadBalancers *GCPEnvLoadBalancersSpec `json:"loadBalancers"`
	// Load balancing strategy.
	LoadBalancingStrategy LoadBalancingStrategy `json:"loadBalancingStrategy"`
	// List of node groups.
	// At least one required.
	NodeGroups []*GCPEnvNodeGroupSpec `json:"nodeGroups"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpec `json:"maintenanceWindows"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// True indicates that cloud resources are to be managed via altinity/cloud-connect.
	// False means direct management.
	CloudConnect bool `json:"cloudConnect"`
	// List of network peering configurations.
	PeeringConnections []*GCPEnvPeeringConnectionSpec `json:"peeringConnections"`
	// List of project IDs + connection limits [projectID=connectionLimit] representing the network's private service consumers. Connection limits are optional, will be set to 1 if not specified.
	//
	// Example: ["project1", "project2=5"]
	PrivateServiceConsumers []string `json:"privateServiceConsumers"`
	// List of private service connections.
	PrivateServiceConnections []*GCPEnvPrivateServiceConnectionSpec `json:"privateServiceConnections"`
}

// GCP environment status.
type GCPEnvStatus struct {
	// Applied spec revision (monotonically-increasing).
	AppliedSpecRevision int64 `json:"appliedSpecRevision"`
	// True indicates that environment is pending deletion.
	PendingDelete bool `json:"pendingDelete"`
	// Status errors.
	Errors []*EnvStatusError `json:"errors"`
}

// HCloud environment.
type HCloudEnv struct {
	// A globally-unique environment identifier.
	Name string `json:"name"`
	// Environment spec.
	Spec *HCloudEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
	// Environment status.
	Status *HCloudEnvStatus `json:"status"`
}

// HCloud environments query filter.
type HCloudEnvFilter struct {
	// Names of the environments to return.
	// Names that don't match any of the existing environments are ignored.
	Names []string `json:"names,omitempty"`
}

// HCloud environment internal load balancer configuration.
type HCloudEnvLoadBalancerInternalSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
}

type HCloudEnvLoadBalancerInternalSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
}

// HCloud environment public load balancer configuration.
type HCloudEnvLoadBalancerPublicSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
}

type HCloudEnvLoadBalancerPublicSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
}

// HCloud environment load balancers configuration.
type HCloudEnvLoadBalancersSpec struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *HCloudEnvLoadBalancerPublicSpec `json:"public"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *HCloudEnvLoadBalancerInternalSpec `json:"internal"`
}

// HCloud environment load balancers configuration input.
type HCloudEnvLoadBalancersSpecInput struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *HCloudEnvLoadBalancerPublicSpecInput `json:"public,omitempty"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *HCloudEnvLoadBalancerInternalSpecInput `json:"internal,omitempty"`
}

// HCloud environment node group configuration.
type HCloudEnvNodeGroupSpec struct {
	// Unique (among environment node groups) node group identifier.
	Name string `json:"name"`
	// HCloud server type (https://docs.hetzner.com/cloud/servers/overview#server-types).
	//
	// Example: "cpx11"
	NodeType string `json:"nodeType"`
	// Locations.
	Locations []string `json:"locations"`
	// Maximum number of instances per availability location.
	CapacityPerLocation int64 `json:"capacityPerLocation"`
	// Types of workload that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations"`
}

// HCloud environment node group configuration input.
type HCloudEnvNodeGroupSpecInput struct {
	// Unique (among environment node groups) node group identifier.
	//
	// Defaults to $nodeType.
	Name *string `json:"name,omitempty"`
	// Machine type (https://cloud.google.com/compute/docs/machine-resource).
	//
	// Example: "cpx11"
	NodeType string `json:"nodeType"`
	// HCloud locations.
	Locations []string `json:"locations,omitempty"`
	// Maximum number of instances per zone.
	CapacityPerLocation int64 `json:"capacityPerLocation"`
	// Types of workloads that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations,omitempty"`
}

// HCloud environment configuration.
type HCloudEnvSpec struct {
	// VPC CIDR block from the private IPv4 address ranges as specified in RFC 1918
	// (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16).
	//
	// At least /21 required.
	//
	// Examples: "10.136.0.0/21"
	//
	// Immutable.
	Cidr string `json:"cidr"`
	// HCloud network https://docs.hetzner.com/cloud/general/locations/
	//
	// Example: "us-west"
	//
	// Immutable.
	NetworkZone string `json:"networkZone"`
	// Explicit list of HCloud locations.
	// (currently supports single location only)
	//
	// Example: ["hil"]
	Locations []string `json:"locations"`
	// Load balancers configuration.
	LoadBalancers *HCloudEnvLoadBalancersSpec `json:"loadBalancers"`
	// Load balancing strategy.
	LoadBalancingStrategy LoadBalancingStrategy `json:"loadBalancingStrategy"`
	// List of node groups.
	// At least one required.
	NodeGroups []*HCloudEnvNodeGroupSpec `json:"nodeGroups"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpec `json:"maintenanceWindows"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	//   CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	//   CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	//   CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// True indicates that cloud resources are to be managed via altinity/cloud-connect.
	// False means direct management.
	CloudConnect bool `json:"cloudConnect"`
	// Labels to apply to HCloud resources.
	Labels []*KeyValue `json:"labels"`
	// Wireguard peers configuration.
	WireguardPeers []*HCloudEnvWireguardPeerSpec `json:"wireguardPeers"`
}

// HCloud environment status.
type HCloudEnvStatus struct {
	// Applied spec revision (monotonically-increasing).
	AppliedSpecRevision int64 `json:"appliedSpecRevision"`
	// True indicates that environment is pending deletion.
	PendingDelete bool `json:"pendingDelete"`
	// Status errors.
	Errors []*EnvStatusError `json:"errors"`
}

// HCloud Wireguard peer configuration.
type HCloudEnvWireguardPeerSpec struct {
	// Peer public key.
	PublicKey string `json:"publicKey"`
	// A list of addresses (in CIDR notation) that should get routed to the peer.
	AllowedIPs []string `json:"allowedIPs"`
	// Peer endpoint.
	Endpoint string `json:"endpoint"`
}

// HCloud Wireguard peer configuration input.
type HCloudEnvWireguardPeerSpecInput struct {
	// Peer public key.
	PublicKey string `json:"publicKey"`
	// A list of addresses (in CIDR notation) that should get routed to the peer.
	AllowedIPs []string `json:"allowedIPs"`
	// Peer endpoint.
	Endpoint string `json:"endpoint"`
}

// Kubernetes environment.
type K8SEnv struct {
	// A globally-unique environment identifier.
	Name string `json:"name"`
	// Environment spec.
	Spec *K8SEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
	// Environment status.
	Status *K8SEnvStatus `json:"status"`
}

// Kubernetes custom node type configuration.
type K8SEnvCustomNodeTypeSpec struct {
	// Custom node type unique identifier.
	Name string `json:"name"`
	// Number of allocatable virtual cores.
	CPUAllocatable float64 `json:"cpuAllocatable"`
	// Amount of allocatable memory in bytes.
	MemAllocatableInBytes int64 `json:"memAllocatableInBytes"`
}

// Kubernetes custom node type configuration input.
type K8SEnvCustomNodeTypeSpecInput struct {
	// Custom node type unique identifier.
	Name string `json:"name"`
	// Number of allocatable virtual cores.
	CPUAllocatable float64 `json:"cpuAllocatable"`
	// Amount of allocatable memory in bytes.
	MemAllocatableInBytes float64 `json:"memAllocatableInBytes"`
}

// Kubernetes environments query filter.
type K8SEnvFilter struct {
	// Names of the environments to return.
	// Names that don't match any of the existing environments are ignored.
	Names []string `json:"names,omitempty"`
}

// Kubernetes environment internal load balancer configuration.
type K8SEnvLoadBalancerInternalSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
	// Annotations to apply to Kubernetes LoadBalancer service.
	Annotations []*KeyValue `json:"annotations"`
}

// Kubernetes environment internal load balancer configuration.
type K8SEnvLoadBalancerInternalSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
	// Annotations to apply to Kubernetes LoadBalancer service.
	Annotations []*KeyValueInput `json:"annotations,omitempty"`
}

// Kubernetes environment public load balancer configuration.
type K8SEnvLoadBalancerPublicSpec struct {
	// True if load balancer is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges"`
	// Annotations to apply to Kubernetes LoadBalancer service.
	Annotations []*KeyValue `json:"annotations"`
}

// Kubernetes environment public load balancer configuration.
type K8SEnvLoadBalancerPublicSpecInput struct {
	// True if load balancer is enabled,
	// false otherwise.
	//
	// False by default.
	Enabled *bool `json:"enabled,omitempty"`
	// IP addresses/blocks to allow traffic from.
	//
	// 0.0.0.0/0 by default.
	SourceIPRanges []string `json:"sourceIPRanges,omitempty"`
	// Annotations to apply to Kubernetes LoadBalancer service.
	Annotations []*KeyValueInput `json:"annotations,omitempty"`
}

// Kubernetes environment load balancers configuration.
type K8SEnvLoadBalancersSpec struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *K8SEnvLoadBalancerPublicSpec `json:"public"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *K8SEnvLoadBalancerInternalSpec `json:"internal"`
}

// Kubernetes environment load balancers configuration.
type K8SEnvLoadBalancersSpecInput struct {
	// Public load balancer configuration.
	//
	// Accessible via *.$env_name.altinity.cloud.
	Public *K8SEnvLoadBalancerPublicSpecInput `json:"public,omitempty"`
	// Internal load balancer configuration.
	//
	// Accessible via *.internal.$env_name.altinity.cloud.
	Internal *K8SEnvLoadBalancerInternalSpecInput `json:"internal,omitempty"`
}

// Kubernetes environment logs configuration.
type K8SEnvLogsSpec struct {
	// Storage backend configuration.
	Storage *K8SEnvLogsStorageSpec `json:"storage"`
}

// Kubernetes environment logs configuration input.
type K8SEnvLogsSpecInput struct {
	// Storage backend configuration.
	Storage *K8SEnvSpecLogsStorageSpecInput `json:"storage,omitempty"`
}

// Kubernetes environment logs GCS storage configuration.
type K8SEnvLogsStorageGCSSpec struct {
	// GCS bucket name.
	BucketName *string `json:"bucketName,omitempty"`
}

// Kubernetes environment logs S3 storage configuration.
type K8SEnvLogsStorageS3Spec struct {
	// S3 bucket name.
	BucketName *string `json:"bucketName,omitempty"`
	// S3 bucket region.
	//
	// Defaults to environment region.
	Region *string `json:"region,omitempty"`
}

// Kubernetes environment logs storage configuration.
type K8SEnvLogsStorageSpec struct {
	// Amazon S3 configuration.
	S3 *K8SEnvLogsStorageS3Spec `json:"s3,omitempty"`
	// Google Cloud Storage configuration.
	Gcs *K8SEnvLogsStorageGCSSpec `json:"gcs,omitempty"`
}

// Kubernetes environment metrics configuration.
type K8SEnvMetricsSpec struct {
	// Metrics retention period in days.
	//
	// 1 month by default.
	RetentionPeriodInDays *int64 `json:"retentionPeriodInDays,omitempty"`
}

// Kubernetes environment metrics configuration input.
type K8SEnvMetricsSpecInput struct {
	// Metrics retention period in days.
	//
	// 1 month by default.
	RetentionPeriodInDays *int64 `json:"retentionPeriodInDays,omitempty"`
}

// Kubernetes environment node group configuration.
type K8SEnvNodeGroupSpec struct {
	// Unique (among environment node groups) node group identifier.
	Name string `json:"name"`
	// node.kubernetes.io/instance-type value.
	NodeType string `json:"nodeType"`
	// topology.kubernetes.io/zone values.
	Zones []string `json:"zones"`
	// Maximum number of nodes per zone.
	CapacityPerZone int64 `json:"capacityPerZone"`
	// Types of workloads that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations"`
	// List of tolerations to apply to the pods targeting this group.
	Tolerations []*NodeToleration `json:"tolerations"`
	// nodeSelector to apply to the pods targeting this group.
	Selector []*KeyValue `json:"selector"`
}

type K8SEnvNodeGroupSpecInput struct {
	// Unique (among environment node groups) node group identifier.
	//
	// Defaults to $nodeType.
	Name *string `json:"name,omitempty"`
	// node.kubernetes.io/instance-type value.
	NodeType string `json:"nodeType"`
	// topology.kubernetes.io/zone values.
	Zones []string `json:"zones"`
	// Maximum number of nodes per zone.
	CapacityPerZone int64 `json:"capacityPerZone"`
	// Types of workloads that are allowed to be scheduled onto the nodes that belong to this group.
	Reservations []NodeReservation `json:"reservations,omitempty"`
	// List of tolerations to apply to the pods targeting this group.
	Tolerations []*NodeTolerationSpecInput `json:"tolerations,omitempty"`
	// nodeSelector to apply to the pods targeting this group.
	Selector []*KeyValueInput `json:"selector,omitempty"`
}

// Kubernetes environment configuration.
type K8SEnvSpec struct {
	// Kubernetes distribution.
	//
	// Immutable.
	Distribution K8SDistribution `json:"distribution"`
	// Load balancers configuration.
	LoadBalancers *K8SEnvLoadBalancersSpec `json:"loadBalancers"`
	// Load balancing strategy.
	LoadBalancingStrategy LoadBalancingStrategy `json:"loadBalancingStrategy"`
	// List of node groups.
	// At least one required.
	NodeGroups []*K8SEnvNodeGroupSpec `json:"nodeGroups"`
	// Custom node types.
	CustomNodeTypes []*K8SEnvCustomNodeTypeSpec `json:"customNodeTypes"`
	// Metrics configuration.
	Metrics *K8SEnvMetricsSpec `json:"metrics"`
	// Logs configuration.
	Logs *K8SEnvLogsSpec `json:"logs"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpec `json:"maintenanceWindows"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
}

// Kubernetes environment logs GCS storage configuration.
type K8SEnvSpecLogsStorageGCSSpecInput struct {
	// GCS bucket name.
	BucketName *string `json:"bucketName,omitempty"`
}

// Kubernetes environment logs S3 storage configuration.
type K8SEnvSpecLogsStorageS3SpecInput struct {
	// S3 bucket name.
	BucketName *string `json:"bucketName,omitempty"`
	// S3 bucket region.
	//
	// Defaults to environment region.
	Region *string `json:"region,omitempty"`
}

// Kubernetes environment logs storage configuration input.
type K8SEnvSpecLogsStorageSpecInput struct {
	// Amazon S3 configuration.
	S3 *K8SEnvSpecLogsStorageS3SpecInput `json:"s3,omitempty"`
	// Google Cloud Storage configuration.
	Gcs *K8SEnvSpecLogsStorageGCSSpecInput `json:"gcs,omitempty"`
}

// Kubernetes environment status.
type K8SEnvStatus struct {
	// Applied spec revision (monotonically-increasing).
	AppliedSpecRevision int64 `json:"appliedSpecRevision"`
	// True indicates that environment is pending deletion.
	PendingDelete bool `json:"pendingDelete"`
	// Status errors.
	Errors []*EnvStatusError `json:"errors"`
}

type KeyValue struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type KeyValueInput struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// Maintenance window configuration.
type MaintenanceWindowSpec struct {
	// Maintenance window identifier.
	Name string `json:"name"`
	// True if maintenance window is enabled,
	// false otherwise.
	Enabled bool `json:"enabled"`
	// Hour of the day in [0, 23] range.
	Hour int64 `json:"hour"`
	// Maintenance window length in hours. 4h min, 24h max.
	LengthInHours int64 `json:"lengthInHours"`
	// Days on which maintenance can take place.
	// At least one day is required.
	Days []Day `json:"days"`
}

// Maintenance window configuration input.
type MaintenanceWindowSpecInput struct {
	// Maintenance window identifier.
	Name string `json:"name"`
	// True if maintenance window is enabled,
	// false otherwise.
	//
	// True by default.
	Enabled *bool `json:"enabled,omitempty"`
	// Hour of the day in [0, 23] range.
	Hour int64 `json:"hour"`
	// Maintenance window length in hours. 4h min, 24h max.
	LengthInHours int64 `json:"lengthInHours"`
	// Days on which maintenance can take place.
	// At least one day is required.
	Days []Day `json:"days"`
}

type Mutation struct {
}

type NodeToleration struct {
	// Taint key, e.g. "dedicated".
	Key      string                 `json:"key"`
	Operator NodeTolerationOperator `json:"operator"`
	// Taint value, e.g. "clickhouse"
	Value string `json:"value"`
	// Taint effect to match.
	Effect NodeTolerationEffect `json:"effect"`
}

type NodeTolerationSpecInput struct {
	Key      string                 `json:"key"`
	Operator NodeTolerationOperator `json:"operator"`
	Value    string                 `json:"value"`
	Effect   NodeTolerationEffect   `json:"effect"`
}

// Specifies Azure Private Link Service settings, including allowed subscription IDs for
// private access. This enhances network security by ensuring only authorized subscriptions
// connect to your services.
//
// Example: ["34d1b48e-6471-4129-be6b-9e3c2df6955c", "23f44dbf-02a0-4fd7-b821-5e82652bd920"]
type PrivateLinkServiceSpec struct {
	// Lists subscription IDs permitted for Private Link access, securing service connections.
	AllowedSubscriptions []string `json:"allowedSubscriptions"`
}

// Specifies Azure Private Link Service settings, including allowed subscription IDs for
// private access. This enhances network security by ensuring only authorized subscriptions
// connect to your services.
//
// Example: ["34d1b48e-6471-4129-be6b-9e3c2df6955c", "23f44dbf-02a0-4fd7-b821-5e82652bd920"]
type PrivateLinkServiceSpecInput struct {
	// Lists subscription IDs permitted for Private Link access, securing service connections.
	AllowedSubscriptions []string `json:"allowedSubscriptions"`
}

type Query struct {
}

// AWS environment update request input.
type UpdateAWSEnvInput struct {
	// Environment name.
	Name string `json:"name"`
	// Environment spec.
	Spec *AWSEnvUpdateSpecInput `json:"spec"`
	// Environment spec update strategy.
	// MERGE by default.
	UpdateStrategy *UpdateStrategy `json:"updateStrategy,omitempty"`
}

// AWS environment update request result.
type UpdateAWSEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// AWS environment active configuration.
	Spec *AWSEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// Azure environment update request input.
type UpdateAzureEnvInput struct {
	// Environment name.
	Name string `json:"name"`
	// Environment spec.
	Spec *UpdateAzureEnvSpecInput `json:"spec"`
	// Environment spec update strategy.
	// MERGE by default.
	UpdateStrategy *UpdateStrategy `json:"updateStrategy,omitempty"`
}

// Azure environment update request result.
type UpdateAzureEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// Azure environment active configuration.
	Spec *AzureEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// Azure environment configuration update request input.
type UpdateAzureEnvSpecInput struct {
	// Number of Azure zones.
	// At least 2 required (if specified).
	NumberOfZones *int64 `json:"numberOfZones,omitempty"`
	// Explicit list of Azure zones.
	// At least 2 required (if specified).
	//
	// Example: ["eastus-1", "eastus-2"]
	Zones []string `json:"zones,omitempty"`
	// Load balancers configuration.
	LoadBalancers *AzureEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	// ZONE_BEST_EFFORT by default.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	// At least one required.
	NodeGroups []*AzureEnvNodeGroupSpecInput `json:"nodeGroups,omitempty"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, privatelink)
	// CNAME *.privatelink.example.com. _.privatelink.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// Azure Private Link service configuration.
	PrivateLinkService *PrivateLinkServiceSpecInput `json:"privateLinkService,omitempty"`
	Tags               []*KeyValueInput             `json:"tags,omitempty"`
}

// GCP environment update request input.
type UpdateGCPEnvInput struct {
	// Environment name.
	Name string `json:"name"`
	// Environment spec.
	Spec *UpdateGCPEnvSpecInput `json:"spec"`
	// Environment spec update strategy.
	// MERGE by default.
	UpdateStrategy *UpdateStrategy `json:"updateStrategy,omitempty"`
}

// GCP environment update request result.
type UpdateGCPEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// GCP environment active configuration.
	Spec *GCPEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// GCP environment configuration update request input.
type UpdateGCPEnvSpecInput struct {
	// Number of GCP zones.
	// At least 2 required (if specified).
	NumberOfZones *int64 `json:"numberOfZones,omitempty"`
	// Explicit list of GCP zones.
	// At least 2 required (if specified).
	//
	// Example: ["us-west1a", "us-west1b"]
	Zones []string `json:"zones,omitempty"`
	// Load balancers configuration.
	LoadBalancers *GCPEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	// ZONE_BEST_EFFORT by default.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	// At least one required.
	NodeGroups []*GCPEnvNodeGroupSpecInput `json:"nodeGroups,omitempty"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// Network peering configuration.
	PeeringConnections []*GCPEnvPeeringConnectionSpecInput `json:"peeringConnections,omitempty"`
	// List of project IDs representing the network's private service consumers.
	PrivateServiceConsumers []string `json:"privateServiceConsumers,omitempty"`
	// List of private service connections.
	PrivateServiceConnections []*GCPEnvPrivateServiceConnectionSpecInput `json:"privateServiceConnections,omitempty"`
}

// HCloud environment update request input.
type UpdateHCloudEnvInput struct {
	// Environment name.
	Name string `json:"name"`
	// Environment spec.
	Spec *UpdateHCloudEnvSpecInput `json:"spec"`
	// Environment spec update strategy.
	// MERGE by default.
	UpdateStrategy *UpdateStrategy `json:"updateStrategy,omitempty"`
}

// HCloud environment update request result.
type UpdateHCloudEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// HCloud environment active configuration.
	Spec *HCloudEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// HCloud environment configuration update request input.
type UpdateHCloudEnvSpecInput struct {
	// Load balancers configuration.
	LoadBalancers *HCloudEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	// ZONE_BEST_EFFORT by default.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	// At least one required.
	NodeGroups []*HCloudEnvNodeGroupSpecInput `json:"nodeGroups,omitempty"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please update the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
	// Labels to apply to HCloud resources.
	Labels []*KeyValueInput `json:"labels,omitempty"`
	// Encrypted value of HCLOUD_TOKEN
	HcloudTokenEnc *string `json:"hcloudTokenEnc,omitempty"`
	// Wireguard peers configuration.
	WireguardPeers []*HCloudEnvWireguardPeerSpecInput `json:"wireguardPeers,omitempty"`
}

// Kubernetes environment update request input.
type UpdateK8SEnvInput struct {
	// Environment name.
	Name string `json:"name"`
	// Environment spec.
	Spec *UpdateK8SEnvSpecInput `json:"spec"`
	// Environment spec update strategy.
	// MERGE by default.
	UpdateStrategy *UpdateStrategy `json:"updateStrategy,omitempty"`
}

// Kubernetes environment update request result.
type UpdateK8SEnvResult struct {
	// Mutation unique identifier.
	MutationID string `json:"mutationId"`
	// Kubernetes environment active configuration.
	Spec *K8SEnvSpec `json:"spec"`
	// Spec revision (monotonically-increasing).
	SpecRevision int64 `json:"specRevision"`
}

// Kubernetes environment configuration update request input.
type UpdateK8SEnvSpecInput struct {
	// Load balancers configuration.
	LoadBalancers *K8SEnvLoadBalancersSpecInput `json:"loadBalancers,omitempty"`
	// Load balancing strategy.
	LoadBalancingStrategy *LoadBalancingStrategy `json:"loadBalancingStrategy,omitempty"`
	// List of node groups.
	NodeGroups []*K8SEnvNodeGroupSpecInput `json:"nodeGroups,omitempty"`
	// Custom node types.
	CustomNodeTypes []*K8SEnvCustomNodeTypeSpecInput `json:"customNodeTypes,omitempty"`
	// Metrics configuration.
	Metrics *K8SEnvMetricsSpecInput `json:"metrics,omitempty"`
	// Logs configuration.
	Logs *K8SEnvLogsSpecInput `json:"logs,omitempty"`
	// List of maintenance windows during which automatic maintenance is permitted.
	// By default updates are applied as soon as they are available.
	MaintenanceWindows []*MaintenanceWindowSpecInput `json:"maintenanceWindows,omitempty"`
	// Custom domain.
	//
	// Examples:
	// - "example.com"
	// - "foo.bar.com"
	//
	// Before specifying custom domain, please create the following DNS records:
	// - CNAME _acme-challenge.example.com. $env_name.altinity.cloud.
	// - (optional, public load balancer)
	// CNAME *.example.com. _.$env_name.altinity.cloud.
	// - (optional, internal load balancer)
	// CNAME *.internal.example.com. _.internal.$env_name.altinity.cloud.
	// - (optional, vpce)
	// CNAME *.vpce.example.com. _.vpce.$env_name.altinity.cloud.
	CustomDomain *string `json:"customDomain,omitempty"`
}

// Day of the week.
type Day string

const (
	DaySunday    Day = "SUNDAY"
	DayMonday    Day = "MONDAY"
	DayTuesday   Day = "TUESDAY"
	DayWednesday Day = "WEDNESDAY"
	DayThursday  Day = "THURSDAY"
	DayFriday    Day = "FRIDAY"
	DaySaturday  Day = "SATURDAY"
)

var AllDay = []Day{
	DaySunday,
	DayMonday,
	DayTuesday,
	DayWednesday,
	DayThursday,
	DayFriday,
	DaySaturday,
}

func (e Day) IsValid() bool {
	switch e {
	case DaySunday, DayMonday, DayTuesday, DayWednesday, DayThursday, DayFriday, DaySaturday:
		return true
	}
	return false
}

func (e Day) String() string {
	return string(e)
}

func (e *Day) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = Day(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Day", str)
	}
	return nil
}

func (e Day) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

func (e *Day) UnmarshalJSON(b []byte) error {
	s, err := strconv.Unquote(string(b))
	if err != nil {
		return err
	}
	return e.UnmarshalGQL(s)
}

func (e Day) MarshalJSON() ([]byte, error) {
	var buf bytes.Buffer
	e.MarshalGQL(&buf)
	return buf.Bytes(), nil
}

// Status error codes.
type EnvStatusErrorCode string

const (
	EnvStatusErrorCodeInternal                      EnvStatusErrorCode = "INTERNAL"
	EnvStatusErrorCodeDisconnected                  EnvStatusErrorCode = "DISCONNECTED"
	EnvStatusErrorCodeCloudProviderAccessDenied     EnvStatusErrorCode = "CLOUD_PROVIDER_ACCESS_DENIED"
	EnvStatusErrorCodeCloudProviderQuotaExceeded    EnvStatusErrorCode = "CLOUD_PROVIDER_QUOTA_EXCEEDED"
	EnvStatusErrorCodeCloudProviderResourceNotFound EnvStatusErrorCode = "CLOUD_PROVIDER_RESOURCE_NOT_FOUND"
)

var AllEnvStatusErrorCode = []EnvStatusErrorCode{
	EnvStatusErrorCodeInternal,
	EnvStatusErrorCodeDisconnected,
	EnvStatusErrorCodeCloudProviderAccessDenied,
	EnvStatusErrorCodeCloudProviderQuotaExceeded,
	EnvStatusErrorCodeCloudProviderResourceNotFound,
}

func (e EnvStatusErrorCode) IsValid() bool {
	switch e {
	case EnvStatusErrorCodeInternal, EnvStatusErrorCodeDisconnected, EnvStatusErrorCodeCloudProviderAccessDenied, EnvStatusErrorCodeCloudProviderQuotaExceeded, EnvStatusErrorCodeCloudProviderResourceNotFound:
		return true
	}
	return false
}

func (e EnvStatusErrorCode) String() string {
	return string(e)
}

func (e *EnvStatusErrorCode) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = EnvStatusErrorCode(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid EnvStatusErrorCode", str)
	}
	return nil
}

func (e EnvStatusErrorCode) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

func (e *EnvStatusErrorCode) UnmarshalJSON(b []byte) error {
	s, err := strconv.Unquote(string(b))
	if err != nil {
		return err
	}
	return e.UnmarshalGQL(s)
}

func (e EnvStatusErrorCode) MarshalJSON() ([]byte, error) {
	var buf bytes.Buffer
	e.MarshalGQL(&buf)
	return buf.Bytes(), nil
}

// Kubernetes distribution.
type K8SDistribution string

const (
	// Amazon Elastic Kubernetes Service.
	K8SDistributionEks K8SDistribution = "EKS"
	// Google Kubernetes Engine.
	K8SDistributionGke K8SDistribution = "GKE"
	// Azure Kubernetes Service.
	K8SDistributionAks K8SDistribution = "AKS"
	// Custom Kubernetes distribution.
	K8SDistributionCustom K8SDistribution = "CUSTOM"
)

var AllK8SDistribution = []K8SDistribution{
	K8SDistributionEks,
	K8SDistributionGke,
	K8SDistributionAks,
	K8SDistributionCustom,
}

func (e K8SDistribution) IsValid() bool {
	switch e {
	case K8SDistributionEks, K8SDistributionGke, K8SDistributionAks, K8SDistributionCustom:
		return true
	}
	return false
}

func (e K8SDistribution) String() string {
	return string(e)
}

func (e *K8SDistribution) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = K8SDistribution(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid K8SDistribution", str)
	}
	return nil
}

func (e K8SDistribution) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

func (e *K8SDistribution) UnmarshalJSON(b []byte) error {
	s, err := strconv.Unquote(string(b))
	if err != nil {
		return err
	}
	return e.UnmarshalGQL(s)
}

func (e K8SDistribution) MarshalJSON() ([]byte, error) {
	var buf bytes.Buffer
	e.MarshalGQL(&buf)
	return buf.Bytes(), nil
}

// Load balancing strategy.
type LoadBalancingStrategy string

const (
	// Keep the traffic within the same zone.
	LoadBalancingStrategyZoneBestEffort LoadBalancingStrategy = "ZONE_BEST_EFFORT"
	// Load balance traffic across all zones in round-robin fashion.
	LoadBalancingStrategyRoundRobin LoadBalancingStrategy = "ROUND_ROBIN"
)

var AllLoadBalancingStrategy = []LoadBalancingStrategy{
	LoadBalancingStrategyZoneBestEffort,
	LoadBalancingStrategyRoundRobin,
}

func (e LoadBalancingStrategy) IsValid() bool {
	switch e {
	case LoadBalancingStrategyZoneBestEffort, LoadBalancingStrategyRoundRobin:
		return true
	}
	return false
}

func (e LoadBalancingStrategy) String() string {
	return string(e)
}

func (e *LoadBalancingStrategy) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = LoadBalancingStrategy(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid LoadBalancingStrategy", str)
	}
	return nil
}

func (e LoadBalancingStrategy) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

func (e *LoadBalancingStrategy) UnmarshalJSON(b []byte) error {
	s, err := strconv.Unquote(string(b))
	if err != nil {
		return err
	}
	return e.UnmarshalGQL(s)
}

func (e LoadBalancingStrategy) MarshalJSON() ([]byte, error) {
	var buf bytes.Buffer
	e.MarshalGQL(&buf)
	return buf.Bytes(), nil
}

// Node reservation.
type NodeReservation string

const (
	// Reservation for infrastructure/support services.
	NodeReservationSystem NodeReservation = "SYSTEM"
	// Reservation for ClickHouse.
	NodeReservationClickhouse NodeReservation = "CLICKHOUSE"
	// Reservation for ZooKeeper.
	NodeReservationZookeeper NodeReservation = "ZOOKEEPER"
)

var AllNodeReservation = []NodeReservation{
	NodeReservationSystem,
	NodeReservationClickhouse,
	NodeReservationZookeeper,
}

func (e NodeReservation) IsValid() bool {
	switch e {
	case NodeReservationSystem, NodeReservationClickhouse, NodeReservationZookeeper:
		return true
	}
	return false
}

func (e NodeReservation) String() string {
	return string(e)
}

func (e *NodeReservation) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = NodeReservation(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid NodeReservation", str)
	}
	return nil
}

func (e NodeReservation) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

func (e *NodeReservation) UnmarshalJSON(b []byte) error {
	s, err := strconv.Unquote(string(b))
	if err != nil {
		return err
	}
	return e.UnmarshalGQL(s)
}

func (e NodeReservation) MarshalJSON() ([]byte, error) {
	var buf bytes.Buffer
	e.MarshalGQL(&buf)
	return buf.Bytes(), nil
}

// Node taint effect.
type NodeTolerationEffect string

const (
	NodeTolerationEffectNoSchedule       NodeTolerationEffect = "NO_SCHEDULE"
	NodeTolerationEffectPreferNoSchedule NodeTolerationEffect = "PREFER_NO_SCHEDULE"
	NodeTolerationEffectNoExecute        NodeTolerationEffect = "NO_EXECUTE"
)

var AllNodeTolerationEffect = []NodeTolerationEffect{
	NodeTolerationEffectNoSchedule,
	NodeTolerationEffectPreferNoSchedule,
	NodeTolerationEffectNoExecute,
}

func (e NodeTolerationEffect) IsValid() bool {
	switch e {
	case NodeTolerationEffectNoSchedule, NodeTolerationEffectPreferNoSchedule, NodeTolerationEffectNoExecute:
		return true
	}
	return false
}

func (e NodeTolerationEffect) String() string {
	return string(e)
}

func (e *NodeTolerationEffect) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = NodeTolerationEffect(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid NodeTolerationEffect", str)
	}
	return nil
}

func (e NodeTolerationEffect) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

func (e *NodeTolerationEffect) UnmarshalJSON(b []byte) error {
	s, err := strconv.Unquote(string(b))
	if err != nil {
		return err
	}
	return e.UnmarshalGQL(s)
}

func (e NodeTolerationEffect) MarshalJSON() ([]byte, error) {
	var buf bytes.Buffer
	e.MarshalGQL(&buf)
	return buf.Bytes(), nil
}

// Node toleration operator used to match taints.
type NodeTolerationOperator string

const (
	NodeTolerationOperatorEqual  NodeTolerationOperator = "EQUAL"
	NodeTolerationOperatorExists NodeTolerationOperator = "EXISTS"
)

var AllNodeTolerationOperator = []NodeTolerationOperator{
	NodeTolerationOperatorEqual,
	NodeTolerationOperatorExists,
}

func (e NodeTolerationOperator) IsValid() bool {
	switch e {
	case NodeTolerationOperatorEqual, NodeTolerationOperatorExists:
		return true
	}
	return false
}

func (e NodeTolerationOperator) String() string {
	return string(e)
}

func (e *NodeTolerationOperator) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = NodeTolerationOperator(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid NodeTolerationOperator", str)
	}
	return nil
}

func (e NodeTolerationOperator) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

func (e *NodeTolerationOperator) UnmarshalJSON(b []byte) error {
	s, err := strconv.Unquote(string(b))
	if err != nil {
		return err
	}
	return e.UnmarshalGQL(s)
}

func (e NodeTolerationOperator) MarshalJSON() ([]byte, error) {
	var buf bytes.Buffer
	e.MarshalGQL(&buf)
	return buf.Bytes(), nil
}

// Update strategy.
type UpdateStrategy string

const (
	// Merge objects & replace lists.
	UpdateStrategyMerge UpdateStrategy = "MERGE"
	// Replace all.
	UpdateStrategyReplace UpdateStrategy = "REPLACE"
)

var AllUpdateStrategy = []UpdateStrategy{
	UpdateStrategyMerge,
	UpdateStrategyReplace,
}

func (e UpdateStrategy) IsValid() bool {
	switch e {
	case UpdateStrategyMerge, UpdateStrategyReplace:
		return true
	}
	return false
}

func (e UpdateStrategy) String() string {
	return string(e)
}

func (e *UpdateStrategy) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = UpdateStrategy(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid UpdateStrategy", str)
	}
	return nil
}

func (e UpdateStrategy) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

func (e *UpdateStrategy) UnmarshalJSON(b []byte) error {
	s, err := strconv.Unquote(string(b))
	if err != nil {
		return err
	}
	return e.UnmarshalGQL(s)
}

func (e UpdateStrategy) MarshalJSON() ([]byte, error) {
	var buf bytes.Buffer
	e.MarshalGQL(&buf)
	return buf.Bytes(), nil
}
